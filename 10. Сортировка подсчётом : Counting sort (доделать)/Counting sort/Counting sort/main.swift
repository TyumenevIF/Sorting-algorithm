//
//  main.swift
//  Counting sort
//
//  Created by Ilyas Tyumenev on 26.06.2022.
//

/*
 Сортировка подсчётом / Counting sort

 Сортировка подсчётом - это алгоритм, основанный на подсчёте повторяющихся элементов в массиве.

 Общая идея алгоритма (простой вариант):
    • Есть массив A длиной n элементов, который нужно отсортировать. Создаётся вспомогательный массив C с индексами от 0 до
 k (максимальное значение в массиве A) и заполняется нулями.
    • Последовательно проходим по массиву A и записываем в C[i] количество чисел, равных i. Таким образом индексы в массиве
 C - это значения массива A, а значение в массиве C - это то, сколько раз это число повторяется в массиве A.
    • Проходим по массиву C и переносим значения в массив A.
 
 Сложность      Лучшее      Среднее     Худшее
 Время          O(n+k)      O(n+k)      O(n + k)
 Память                                 O(k)
 
    • n - размер отсортированного массива, а k - размер вспомогательного массива
 
 Ввод: 1 0 1 3 10 1 -9 8
 Вывод -9 0 1 1 1 3 8 10
 */
import Foundation

print("Можно вводить данные")

let intArray = readLine()!.split(separator: " ").compactMap { Int($0) }

func countingSort(array: [Int]) -> [Int] {
    var arr = array
    if array.isEmpty {
        return []
    }
    
    // вычисляем минимальное и максимальное значение в массиве
    let min = array.min()!
    let max = array.max()!
    
    // создаём вспомогательный массив, все элементы которого == 0
    var count = Array(repeating: 0, count: max - min + 1)
    
    // подсчитываем числа и записываем во вспомогательный массив
    for number in array {
        count[number - min] += 1
    }
    
    // переносим значения в первоначальный массив
    var z = 0
    for i in min..<max {
        while count[i - min] > 0 {
            arr[z] = i
            z += 1
            count[i - min] -= 1
        }
    }
    return arr
}

print(countingSort(array: intArray))
