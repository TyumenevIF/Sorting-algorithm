//
//  main.swift
//  Quick sort
//
//  Created by Ilyas Tyumenev on 26.06.2022.
//

/*
 Быстрая сортировка / Quick sort
 
 Общая идея алгоритма:
    • Выбрать из массива элемент, который обычно называют опорным. Это может быть любой элемент из массива. От выбора
 опорного элемента не зависит корректность алгоритма, но в отдельных случаях может сильно зависеть его эффективность.
    • Сравнить все остальные элементы с опорным и переставить их в массиве так, чтобы разбить массив на три непрерывных
 отрезка, следующих друг за другом: «элементы меньшие опорного», «равные» и «большие».
    • Рекурсивно применить первые два шага к отрезкам, содержащим «меньшие» и «большие» значения. Не применять к
 массиву, в котором только один элемент или отсутствуют элементы.

 Сложность      Лучшее      Среднее         Худшее
 Время          O(n)        O(n log n)      O(n^2)
 Память                                     O(n)

 Ввод:   10 9 7 101 23
 Вывод:  7 9 10 23 101
 */

import Foundation

print("Можно вводить данные")

let intArray = readLine()!.split(separator: " ").compactMap { Int($0) }

func quickSort(array: [Int]) -> [Int] {
    // если в массиве меньше 2-х элементов, то он уже отсортирован
    if array.count < 2 {
        return array
    }
    
    // выбираем опорный элемент
    let a = array
    let pivot = a[a.count / 2]
    
    // сортируем элементы по 3м массивам - меньшие, равные и большие опорного
    let less = a.filter { $0 < pivot }
    let equal = a.filter { $0 == pivot}
    let greater = a.filter { $0 > pivot }
    
    // рекурсивно вызываем функцию для меньших и больших элементов
    return quickSort(array: less) + equal + quickSort(array: greater)
}

print(quickSort(array: intArray))
