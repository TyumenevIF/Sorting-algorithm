//
//  main.swift
//  Shell sort
//
//  Created by Ilyas Tyumenev on 26.06.2022.
//

/*
 Сортировка Шелла - усовершенствованная разновидность сортировки вставками.

 Сначала сравниваются и сортируются между собой значения, стоящие друг от друга на некотором расстоянии - d. После этого
 расстояние d уменьшается и процедура повторяется до тех пор, пока значение d не станет минимальным, т.е. d = 1. Это
 означает, что сортировка достигла последнего шага. А на последнем шага элементы сортируются обычной сортировкой
 вставками.

 Первоначально было предложено расчитывать расстояние между сравниваемыми элементами следующим образом:
    • первая итерация - d(1) = N/2, где N - размер массива;
    • последующие итерации - d(i) = d(i-1)/2;
    • последняя итерация - d(k) = 1
 
 Существуют и другие последовательности.
 
 Сложность      Лучшее          Среднее                             Худшее
 Время          O(n log n)      зависит от выбранных шагов (d)      O(n^2) или O(n log^2 n) (зависит от выбранных шагов)
 Память                                                             O(1)
  
 Ввод:   10 9 7 101 23
 Вывод:  7 9 10 23 101
 */

import Foundation

print("Можно вводить данные")

let intArray = readLine()!.split(separator: " ").compactMap { Int($0) }

func shellSort(array: [Int]) -> [Int] {
    var a = array
    let n = array.count
    var gap = n / 2
    
    while gap > 0 {
        var i = gap
        while i < n {
            let temp = a[i]
            var j = i
            while j >= gap && a[j - gap] > temp {
                a[j] = a[j - gap]
                j -= gap
            }
            a[j] = temp
            i += 1
        }
        gap /= 2
    }
    return a
}

print(shellSort(array: intArray))
